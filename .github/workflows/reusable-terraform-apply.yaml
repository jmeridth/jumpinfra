name: Terraform Apply
on:
  workflow_call:
    inputs:
      env:
        required: true
        type: string
      region:
        required: true
        type: string
    outputs:
      status:
        description: "Terraform Apply Job Status"
        value: ${{ jobs.terraformApply.outputs.status }}
jobs:
  terraformApply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    outputs:
      status: ${{ job.status }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.SERVICE_ACCOUNT_TOKEN }}
      - name: Configure AWS credentials
        id: aws-creds
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_TERRAFORM_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_TERRAFORM_SECRET_ACCESS_KEY }}
          aws-region: ${{ inputs.region }}
      - run: echo ${{ secrets[format('{0}_SECRETS', inputs.env)] }} > ./${{ inputs.env }}.tmp
      - run: base64 -d -i ./${{ inputs.env }}.tmp -o ./terraform/secrets.${{ inputs.env }}.tfvars.json
      - run: rm ./${{ inputs.env }}.tmp
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.2
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true
        working-directory: terraform
      - name: Terraform Init
        id: init
        run: |
          export TF_CLI_ARGS_init=-backend-config=${{ inputs.env }}.tfbackend
          export TF_VAR_region=${{ inputs.region }}
          export TF_VAR_environment=${{ inputs.env }}
          terraform init --var-file="secrets.${{ inputs.env }}.tfvars.json" --var-file="envvars.${{ input.env }}.tfvars.json"
        working-directory: terraform
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: terraform
      - name: Terraform Apply
        run: |
          export TF_CLI_ARGS_init=-backend-config=${{ inputs.env }}.tfbackend
          export TF_VAR_region=${{ inputs.region }}
          export TF_VAR_environment=${{ inputs.env }}
          terraform apply -auto-approve --var-file="secrets.${{ inputs.env }}.tfvars.json" --var-file="envvars.${{ input.env }}.tfvars.json"
        working-directory: terraform
