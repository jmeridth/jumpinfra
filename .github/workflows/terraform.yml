name: terraform

on:
  pull_request:
    types: [opened, reopened, synchronize]

jobs:
  fmt_and_validate:
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_TERRAFORM_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_TERRAFORM_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_TEST_REGION }}
    steps:
      - uses: actions/checkout@v2
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.2.2

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        working-directory: terraform
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: |
          export TF_CLI_ARGS_init=-backend-config=test.tfbackend
          export TF_VAR_region=us-west-2
          export TF_VAR_environment=test
          terraform init
        working-directory: terraform

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        working-directory: terraform
  check_changed:
    outputs:
      directories: ${{ steps.check_directories.outputs.directories }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Check Directories
        id: check_directories
        run: |
          set -x
          changes=$(sed '/^[[:blank:]]*#/d;s/#.*//' "$GITHUB_WORKSPACE/terraform/tflint-enabled-directories" | xargs -n1 | while read directory;
          do
              pushd "$GITHUB_WORKSPACE/terraform/$directory" > /dev/null
              if [ $(git diff --name-only ${{ github.event.pull_request.base.sha }} ${{ github.event.pull_request.head.sha }} . | wc -l) -gt 0 ]; then
                  echo ${directory}
              fi
              popd > /dev/null
          done | jq -R . | jq -n '[inputs]' | jq -c 'map(select(length > 0))')
          echo ::set-output name=directories::$changes
  tflint:
    runs-on: ubuntu-latest
    needs:
      - check_changed
    strategy:
      fail-fast: false
      matrix:
        directory: ${{ fromJSON(needs.check_changed.outputs.directories) }}
    if: needs.check_changed.outputs.directories != '[]'
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Copy default TFLint config file
        run: cp terraform/.tflint.hcl ~/.tflint.hcl
      - uses: actions/cache@v2
        name: Cache TFLint plugin dir
        with:
          path: ~/.tflint.d/plugins
          key: v1-tflint-${{ hashFiles('.tflint.hcl') }}
          restore-keys: |
            v1-tflint-${{ hashFiles('.tflint.hcl') }}
            v1-tflint-
      - uses: terraform-linters/setup-tflint@v1
        name: Setup TFLint
        with:
          tflint_version: v0.35.0
      - name: Show version
        run: tflint --version
        working-directory: ./terraform/${{ matrix.directory }}
      - name: Init TFLint
        run: tflint --init --loglevel=info
        working-directory: ./terraform/${{ matrix.directory }}
      - name: TFLint ${{ matrix.directory }}
        working-directory: ./terraform/${{ matrix.directory }}
        run: tflint -f compact .
